#!/usr/bin/env bash

set -e

# Icarus ------------------------------------------------

printf '\n# hello\n'
iverilog -o hello.vvp hello.v
vvp hello.vvp

printf '\n# negator\n'
iverilog -o negator_tb.vvp negator_tb.v
vvp negator_tb.vvp

printf '\n# counter\n'
iverilog -o counter_tb.vvp counter_tb.v
vvp counter_tb.vvp

printf '\n# ram\n'
iverilog -g2005 -o ram_tb.vvp ram_tb.v
vvp ram_tb.vvp

# Verilator ---------------------------------------------

printf '\n# hello\n'
verilator -Wall --cc hello.v --exe hello.cpp
make -C obj_dir -f Vhello.mk Vhello
./obj_dir/Vhello

printf '\n# negator\n'
verilator -Wall --cc negator.v --exe negator.cpp
make -C obj_dir -f Vnegator.mk Vnegator
./obj_dir/Vnegator

printf '\n# counter\n'
verilator -Wall --cc counter.v --exe counter.cpp
make -C obj_dir -f Vcounter.mk Vcounter
./obj_dir/Vcounter

# Unsupported testbench features...
# which are actually more elegantly done in C++.
#verilator -Wall --cc negator_tb.v --exe negator_tb.cpp
#make -C obj_dir -f Vnegator_tb.mk Vnegator_tb
#./obj_dir/Vnegator_tb

# Yosys ------------------------------------------------

mkdir -p yosys_syn
yosys \
  -o yosys_syn/counter.v \
  -p hierarchy \
  -p proc \
  -p opt \
  -p techmap \
  -p opt \
  counter.v

# Show the design. Neat.
yosys \
  -p hierarchy \
  -p proc \
  -p opt \
  -p show \
  counter.v

cd yosys_syn
cp ../counter.cpp .
# TODO -Wall fails, uninitialized variable.
verilator --cc counter.v --exe counter.cpp
make -C obj_dir -f Vcounter.mk Vcounter
# TODO assert fails.
#./obj_dir/Vcounter

# TODO errors:
# ./counter.v:29: syntax error
# ./counter.v:29: error: syntax error in continuous assignment
# Looks like it does not understand the inline attributes:
# assign _01_[1] = out[1] ^(* src = "<techmap.v>:263" *)  out[0];
# assign _01_[0] = out[0] ^(* src = "<techmap.v>:262" *)  1'b1;
# If I manually remove those, it works.
#cp ../counter_tb.v .
#iverilog -o counter_tb.vvp counter_tb.v
#vvp counter_tb.vvp
